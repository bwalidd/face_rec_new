FROM nvcr.io/nvidia/pytorch:24.05-py3

ENV PYTHONDONTWRITEBYTECODE=1

RUN apt-get update && \
    apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    yasm \
    pkg-config \
    libnuma-dev \
    software-properties-common && \
    apt-get install -y \
    libx264-dev \
    libx265-dev \
    libnuma-dev \
    libvpx-dev \
    libfdk-aac-dev \
    libmp3lame-dev \
    libopus-dev \
    libass-dev \
    libfreetype6-dev \
    libvorbis-dev \
    libxcb1-dev \
    libxcb-shm0-dev \
    libxcb-xfixes0-dev \
    texinfo \
    zlib1g-dev \
    nasm \
    libfreetype6-dev \
    libfontconfig1-dev \
    libfribidi-dev \
    libaom-dev \
    python3-pip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# FFmpeg build (same as CUDA 12.2 version)
WORKDIR /nv
RUN git clone --depth 1 https://github.com/FFmpeg/nv-codec-headers.git --branch n12.2.72.0 && \
    cd nv-codec-headers && \
    make && \
    make install && \
    cd .. && \
    rm -rf nv-codec-headers

WORKDIR /git
RUN git clone --depth 1 https://github.com/FFmpeg/FFmpeg.git --branch n7.0 ffmpeg

WORKDIR /git/ffmpeg
RUN ./configure --enable-nonfree --enable-gpl --enable-cuda-nvcc --enable-libnpp --enable-libaom --enable-libass \
    --enable-libfdk-aac --enable-libmp3lame --enable-libopus --enable-libvorbis --enable-libvpx --enable-libx264 \
    --enable-libx265 --enable-nvenc --extra-cflags=-I/usr/local/cuda/include --extra-ldflags=-L/usr/local/cuda/lib64 && \
    make -j$(nproc) && \
    make install && \
    ldconfig

WORKDIR /app

# Your original custom face_recognition build (unchanged)
COPY ./Backend/face_recognition . 
RUN make install 
RUN apt update && apt-get install -y libgl1-mesa-glx libglib2.0-0 libgtk2.0-dev pkg-config

WORKDIR /app
RUN apt-get update && \
    apt-get install -y python3 python3-pip software-properties-common 

COPY ./Backend/requirements.txt .
RUN python3 -m pip install --upgrade pip
RUN pip install cmake gunicorn
RUN pip install -r requirements.txt
RUN python3 -c 'from opencv_fixer import AutoFix; AutoFix()' 
ENV OPENCV_VIDEOIO_PRIORITY_MSMF=0
RUN apt-get update && apt-get install -y xvfb

RUN apt-get update && apt-get install -y \
    libsm6 \
    libxext6 \
    && rm -rf /var/lib/apt/lists/*

# Copy the ENTIRE Backend directory
COPY ./Backend/ ./Backend/

WORKDIR /app/Backend/
COPY ./Backend/insert_lines.sh .
RUN chmod +x insert_lines.sh 

# Add CUDA version label
LABEL cuda.version="12.4"
LABEL node.target="bluedovve-ms-7b98"

ENV OPENCV_FFMPEG_CAPTURE_OPTIONS="rtsp_transport;udp"
EXPOSE 9898
COPY ./Backend/default.yaml /usr/local/lib/python3.10/dist-packages/ultralytics/yolo/configs/default.yaml

CMD ["sh", "-c","python3 celery_supervisor.py & celery -A Backend.celery_prefork worker --queues=prefork_queue --concurrency=8 --max-tasks-per-child=50 --prefetch-multiplier=1   -Ofair --heartbeat-interval=30 -n worker1@%h & celery -A Backend.celery_prefork worker --queues=prefork_queue --concurrency=8 --max-tasks-per-child=50 --prefetch-multiplier=1   -Ofair --heartbeat-interval=30 -n worker2@%h &  python3 manage.py makemigrations Api && python3 manage.py migrate Api && python3 manage.py migrate  & celery -A Backend.healthCheck beat &  (sleep 15 && python3 manage.py load_roles && python3 manage.py createsuperuser --noinput || echo 'already exist' ) & python3 manage.py runserver 0.0.0.0:9898"]